plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.8'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

group 'de.platon42'
version '0.8'

repositories {
    mavenCentral()
}

/*
  To run tests in IntelliJ use these VM Options for run configuration 
  -ea -Didea.system.path=build/idea-sandbox/system-test -Didea.config.path=build/idea-sandbox/config-test -Didea.plugins.path=build/idea-sandbox/plugins-test
 */

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile "org.assertj:assertj-core:3.12.2"
    testCompile "org.assertj:assertj-guava:3.2.1"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
    testImplementation "org.jetbrains.kotlin:kotlin-test"
//    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
intellij {
    version '2019.1.1'
//    pluginName 'Concise AssertJ Optimizing Nitpicker (Cajon)'
    updateSinceUntilBuild false
}

patchPluginXml {
    changeNotes """
  <h4>V0.8 (05-May-19)</h4>
    <ul>
      <li>Fixed missing description for JoinAssertThatStatements and detection of equivalent expressions (sorry, released it too hastily).
      <li>Fixed isEmpty() for enumerables and strings and isNull() for object conversions to be applied only if it is the terminal method call as isEmpty() and isNull() return void.
      <li>Heavily reworked inspections for edge cases, such as multiple isEqualTo() calls inside a single statement.
      <li>Some inspections could generate bogus code for weird situations, this has been made more fool-proof.
      <li>Corrected highlighting for many inspections.
      <li>Fixed family names for inspections in batch mode.
      <li>Reworded many inspection messages for better understanding.
      <li>Added a first version of a new inspection that tries to detect bogus uses of return statements in test methods and replaces them by assumeThat() calls.
    </ul>
  <h4>V0.7 (28-Apr-19)</h4>
    <ul>
      <li>Another fix for AssertThatGuavaOptional inspection regarding using the same family name for slightly different quick fix executions
          (really, Jetbrains, this sucks for no reason).
      <li>Extended AssertThatSize inspection to transform hasSize() into hasSameSizeAs(), if possible.
      <li>Implemented first version of JoinAssertThatStatements inspection that will try to merge assertThat() statements with the same
          actual object together, preserving comments.
    </ul>
  <p>Full changelog available at <a href="https://github.com/chrisly42/cajon-plugin#changelog">Github project site</a>.</p>
"""
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacoco {
    toolVersion = '0.8.3'
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}

publishPlugin {
    token intellijPublishToken
}